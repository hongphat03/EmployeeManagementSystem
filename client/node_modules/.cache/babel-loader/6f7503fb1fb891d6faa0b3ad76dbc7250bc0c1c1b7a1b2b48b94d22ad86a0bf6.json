{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Documents\\\\EmployeeManagementSystem\\\\client\\\\src\\\\pages\\\\UpdateEmployee.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Button, Container, Form, FormControl, FormGroup, FormLabel } from 'react-bootstrap';\nimport HeaderComponent from '../components/Header';\nimport { getEmployeeById, updateEmployee } from '../api/Employee';\nimport { redirect, useNavigate, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UpdateEmployee = () => {\n  _s();\n  const navigate = useNavigate();\n  const [state, setState] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\"\n  });\n  const {\n    id\n  } = useParams();\n  const loadData = async () => {\n    return await getEmployeeById(id).then(res => setState(res));\n  };\n  useEffect(() => {\n    loadData();\n  }, []);\n  // const updateData = async () => {\n  //     return await updateEmployee(id,state).then(res => {\n  //         if(res.status === 200){\n  //             navigate(-1)\n  //         }\n  //     })\n  // }\n  const handleSubmit = () => {\n    updateEmployee(id, state);\n    navigate(-1);\n  };\n  // window.location.replace('http://localhost:3000/employee');\n  // return navigate(\"/employee\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HeaderComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center\",\n      children: \"Add Employee\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            children: \"FirstName\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            type: \"text\",\n            onChange: e => setState(prev => ({\n              ...prev,\n              firstName: e.target.value\n            })),\n            value: state.firstName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            children: \"LastName\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            type: \"text\",\n            onChange: e => setState(prev => ({\n              ...prev,\n              lastName: e.target.value\n            })),\n            value: state.lastName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            type: \"email\",\n            onChange: e => setState(prev => ({\n              ...prev,\n              email: e.target.value\n            })),\n            value: state.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleSubmit,\n          className: \"my-2\",\n          children: \" Submit \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(UpdateEmployee, \"yINBGwCXnqCxMWZ17DLtHW4pG2I=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = UpdateEmployee;\nexport default UpdateEmployee;\nvar _c;\n$RefreshReg$(_c, \"UpdateEmployee\");","map":{"version":3,"names":["React","useEffect","useState","Button","Container","Form","FormControl","FormGroup","FormLabel","HeaderComponent","getEmployeeById","updateEmployee","redirect","useNavigate","useParams","jsxDEV","_jsxDEV","Fragment","_Fragment","UpdateEmployee","_s","navigate","state","setState","firstName","lastName","email","id","loadData","then","res","handleSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","className","type","onChange","e","prev","target","value","onClick","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Documents/EmployeeManagementSystem/client/src/pages/UpdateEmployee.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Button, Container, Form, FormControl, FormGroup, FormLabel } from 'react-bootstrap';\r\nimport HeaderComponent from '../components/Header';\r\nimport { getEmployeeById, updateEmployee } from '../api/Employee';\r\nimport { redirect, useNavigate, useParams } from 'react-router-dom';\r\n\r\nconst UpdateEmployee = () => {\r\n    const navigate = useNavigate();\r\n    const [state, setState] = useState({\r\n        firstName:\"\",\r\n        lastName:\"\",\r\n        email:\"\"\r\n    });\r\n    const {id} = useParams()\r\n    const loadData = async () => {\r\n        return await getEmployeeById(id).then((res)=>setState(res))\r\n    }\r\n    useEffect(()=>{\r\n        loadData()\r\n    },[])\r\n    // const updateData = async () => {\r\n    //     return await updateEmployee(id,state).then(res => {\r\n    //         if(res.status === 200){\r\n    //             navigate(-1)\r\n    //         }\r\n    //     })\r\n    // }\r\n    const handleSubmit = () => {\r\n        updateEmployee(id,state);\r\n        navigate(-1)\r\n        }\r\n        // window.location.replace('http://localhost:3000/employee');\r\n        // return navigate(\"/employee\");\r\n    return (\r\n        <>\r\n            <HeaderComponent />\r\n            <h1 className=\"text-center\">Add Employee</h1>\r\n            <Container>\r\n                <Form>\r\n                    <FormGroup>\r\n                        <FormLabel>FirstName</FormLabel>\r\n                        <FormControl type='text' onChange={((e) => setState((prev)=>({...prev,firstName:e.target.value})))} value={state.firstName}/>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <FormLabel>LastName</FormLabel>\r\n                        <FormControl type='text' onChange={((e) => setState((prev) => ({...prev,lastName:e.target.value})))} value={state.lastName}/>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <FormLabel>Email</FormLabel>\r\n                        <FormControl type='email' onChange={((e) => setState((prev) => ({...prev,email:e.target.value})))} value={state.email}/>\r\n                    </FormGroup>\r\n                    <Button onClick={handleSubmit} className='my-2'> Submit </Button>\r\n                </Form>\r\n            </Container>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UpdateEmployee;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}