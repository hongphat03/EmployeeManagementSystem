{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hong Phat\\\\Desktop\\\\CRUD_SpringBoot\\\\client\\\\client\\\\src\\\\pages\\\\ListEmployee.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { getListEmployee } from '../api/Employee';\nimport { Button, Container, Row, Table } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport HeaderComponent from '../components/Header';\nimport { Link, useParams } from 'react-router-dom';\nimport CreateTask from './CreateTask';\nimport ListTask from './ListTask';\nimport ListPersonalTask from './ListPersonalTask';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ListEmployee = () => {\n  _s();\n  const user = useParams().account;\n  const [list, setList] = useState([]);\n  const loadData = async () => {\n    return await getListEmployee().then(res => setList(res));\n  };\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  // const deleteEmpl = (id) => {\n  //     deleteEmployee(id)\n  //     // setList((list) => list.filter((lst) => lst.id !== id))\n  // }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HeaderComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-center\",\n        children: \"Employee List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Table, {\n        striped: true,\n        bordered: true,\n        hover: true,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Id\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"First Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Last Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: list.map(employee => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: employee.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: employee.firstName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: employee.lastName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: employee.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: {\n                  pathname: `../${user}/updateEmployee/${employee.id}`\n                },\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  children: \"Update\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 47,\n                  columnNumber: 106\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(CreateTask, {\n                idEmployee: employee.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(ListPersonalTask, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 37\n            }, this)]\n          }, employee.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: {\n          pathname: `../${user}/createEmployee`\n        },\n        children: [\" \", /*#__PURE__*/_jsxDEV(Button, {\n          children: \"Create Employee\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 68\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(ListEmployee, \"4K9SOc05QB9V2LvxHG7EC88DH3Q=\", false, function () {\n  return [useParams];\n});\n_c = ListEmployee;\nexport default ListEmployee;\nvar _c;\n$RefreshReg$(_c, \"ListEmployee\");","map":{"version":3,"names":["React","useEffect","useState","getListEmployee","Button","Container","Row","Table","HeaderComponent","Link","useParams","CreateTask","ListTask","ListPersonalTask","jsxDEV","_jsxDEV","Fragment","_Fragment","ListEmployee","_s","user","account","list","setList","loadData","then","res","children","fileName","_jsxFileName","lineNumber","columnNumber","className","striped","bordered","hover","map","employee","id","firstName","lastName","email","to","pathname","idEmployee","_c","$RefreshReg$"],"sources":["C:/Users/Hong Phat/Desktop/CRUD_SpringBoot/client/client/src/pages/ListEmployee.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { getListEmployee } from '../api/Employee';\r\nimport {Button, Container, Row, Table} from 'react-bootstrap'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport HeaderComponent from '../components/Header';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport CreateTask from './CreateTask';\r\nimport ListTask from './ListTask';\r\nimport ListPersonalTask from './ListPersonalTask';\r\nconst ListEmployee = () => {\r\n    const user = useParams().account\r\n    const [list,setList] = useState([]);\r\n    const loadData = async () => {\r\n        return await getListEmployee().then((res)=>setList(res))\r\n    }\r\n    useEffect(()=>{\r\n        loadData()\r\n    },[])\r\n\r\n    // const deleteEmpl = (id) => {\r\n    //     deleteEmployee(id)\r\n    //     // setList((list) => list.filter((lst) => lst.id !== id))\r\n    // }\r\n    return (\r\n        <>\r\n            <HeaderComponent />\r\n            <Row><h1 className='text-center'>Employee List</h1></Row>\r\n            <Container>\r\n                <Table striped bordered hover>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Id</th>\r\n                            <th>First Name</th>\r\n                            <th>Last Name</th>\r\n                            <th>Email</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            list.map((employee) => (\r\n                                <tr key={employee.id}>\r\n                                    <td>{employee.id}</td>\r\n                                    <td>{employee.firstName}</td>\r\n                                    <td>{employee.lastName}</td>\r\n                                    <td>{employee.email}</td>\r\n                                    <td>\r\n                                        <Link to={{pathname:`../${user}/updateEmployee/${employee.id}`}}><Button>Update</Button></Link>\r\n                                    </td>\r\n                                    <td>\r\n                                        <CreateTask idEmployee = {employee.id}/> \r\n                                    </td>\r\n                                    <td>\r\n                                        {/* <Link to={{pathname:`../tasks/${employee.id}`}}><Button>View Tasks</Button></Link> */}\r\n                                        <ListPersonalTask />\r\n                                    </td>\r\n                                </tr>\r\n                            ))\r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n                <Link to={{pathname:`../${user}/createEmployee`}}> <Button>Create Employee</Button></Link>\r\n            </Container>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ListEmployee;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}